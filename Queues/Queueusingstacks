//implement queues using stacks(2)
#include <iostream>
#include <stack>
using namespace std;
class que{
	stack<int>s1;
	stack<int>s2;
	
	public:
		void push(int x){
			s1.push(x);
		}
		int pop(){
			if(s1.empty() && s2.empty()){
				cout<<"Empty stack"<<endl;
				return -1;
			}
			if(s2.empty()){
				while(!s1.empty()){
					s2.push(s1.top());
					s1.pop();
				}
			}
			int topval=s2.top();
			s2.pop();
			return topval;
		}
		
		int Top(){
			return s2.top();
		}
		
		
		bool empty(){
			if(s1.empty() &&s2.empty()){
				return true;
			}
			else{
				return false;
			}
		}
		
		
};

int main(){
	que q;
	q.push(1);
	q.push(2);
	q.push(3);
	cout<<q.pop()<<endl;
	q.push(4);
	cout<<q.Top()<<endl;
	cout<<q.pop()<<endl;
	cout<<q.pop()<<endl;
	cout<<q.pop()<<endl;
	cout<<q.empty();
	
}
